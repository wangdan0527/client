{"ast":null,"code":"import { call, put } from 'redux-saga/effects';\nimport api from '../../../services/api';\nimport { loadFilterFailure, loadFilterSucess, loadJobsFailure, loadJobsSucess } from './actions';\nexport function* loadFilters() {\n  try {\n    const response = yield call(api.get, 'filters');\n    yield put(loadFilterSucess(response.data));\n  } catch (error) {\n    yield put(loadFilterFailure());\n  }\n}\nexport function* loadJobs() {\n  try {\n    const response = yield call(api.get, 'jobs');\n    yield put(loadJobsSucess(response.data));\n  } catch (error) {\n    yield put(loadJobsFailure());\n  }\n}","map":{"version":3,"sources":["/Volumes/Data/Workspace/fullstack-candidate-testing/client/src/store/modules/repositories/sagas.ts"],"names":["call","put","api","loadFilterFailure","loadFilterSucess","loadJobsFailure","loadJobsSucess","loadFilters","response","get","data","error","loadJobs"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,QAA0B,oBAA1B;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,SAASC,iBAAT,EAA4BC,gBAA5B,EAA8CC,eAA9C,EAA+DC,cAA/D,QAAqF,WAArF;AAEA,OAAO,UAAUC,WAAV,GAAwB;AAC7B,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMR,IAAI,CAACE,GAAG,CAACO,GAAL,EAAU,SAAV,CAA3B;AACA,UAAMR,GAAG,CAACG,gBAAgB,CAACI,QAAQ,CAACE,IAAV,CAAjB,CAAT;AACD,GAHD,CAGE,OAAMC,KAAN,EAAa;AACb,UAAMV,GAAG,CAACE,iBAAiB,EAAlB,CAAT;AACD;AACF;AACD,OAAO,UAAUS,QAAV,GAAqB;AAC1B,MAAI;AACF,UAAMJ,QAAQ,GAAG,MAAMR,IAAI,CAACE,GAAG,CAACO,GAAL,EAAU,MAAV,CAA3B;AACA,UAAMR,GAAG,CAACK,cAAc,CAACE,QAAQ,CAACE,IAAV,CAAf,CAAT;AACD,GAHD,CAGE,OAAMC,KAAN,EAAa;AACb,UAAMV,GAAG,CAACI,eAAe,EAAhB,CAAT;AACD;AACF","sourcesContent":["import { call, put } from 'redux-saga/effects';\nimport api from '../../../services/api';\nimport { loadFilterFailure, loadFilterSucess, loadJobsFailure, loadJobsSucess } from './actions';\n\nexport function* loadFilters() {\n  try {\n    const response = yield call(api.get, 'filters');\n    yield put(loadFilterSucess(response.data));\n  } catch(error) {\n    yield put(loadFilterFailure());\n  }\n}\nexport function* loadJobs() {\n  try {\n    const response = yield call(api.get, 'jobs');\n    yield put(loadJobsSucess(response.data));\n  } catch(error) {\n    yield put(loadJobsFailure());\n  }\n}"]},"metadata":{},"sourceType":"module"}