{"ast":null,"code":"import _objectSpread from \"/Volumes/Data/Workspace/fullstack-candidate-testing/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { RepositoriesTypes } from './types';\nconst INITIAL_STATE = {\n  filters: {\n    job_type: [],\n    work_schedule: [],\n    experience: [],\n    department: []\n  },\n  jobs: [],\n  error: false,\n  loading: false\n};\n\nconst reducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case RepositoriesTypes.LOAD_FILTER_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    case RepositoriesTypes.LOAD_FILTER_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        error: false,\n        filters: action.payload.data\n      });\n\n    case RepositoriesTypes.LOAD_FILTER_FAILURE:\n      return _objectSpread({}, state, {\n        loading: false,\n        error: true,\n        filters: []\n      });\n\n    case RepositoriesTypes.LOAD_JOB_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    case RepositoriesTypes.LOAD_JOB_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        error: false,\n        jobs: action.payload.data\n      });\n\n    case RepositoriesTypes.LOAD_JOB_FAILURE:\n      return _objectSpread({}, state, {\n        loading: false,\n        error: true,\n        filters: []\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Volumes/Data/Workspace/fullstack-candidate-testing/client/src/store/modules/repositories/index.ts"],"names":["RepositoriesTypes","INITIAL_STATE","filters","job_type","work_schedule","experience","department","jobs","error","loading","reducer","state","action","type","LOAD_FILTER_REQUEST","LOAD_FILTER_SUCCESS","payload","data","LOAD_FILTER_FAILURE","LOAD_JOB_REQUEST","LOAD_JOB_SUCCESS","LOAD_JOB_FAILURE"],"mappings":";AACA,SAA4BA,iBAA5B,QAAqD,SAArD;AAEA,MAAMC,aAAgC,GAAG;AACvCC,EAAAA,OAAO,EAAE;AACPC,IAAAA,QAAQ,EAAE,EADH;AAEPC,IAAAA,aAAa,EAAE,EAFR;AAGPC,IAAAA,UAAU,EAAE,EAHL;AAIPC,IAAAA,UAAU,EAAE;AAJL,GAD8B;AAOvCC,EAAAA,IAAI,EAAE,EAPiC;AAQvCC,EAAAA,KAAK,EAAE,KARgC;AASvCC,EAAAA,OAAO,EAAE;AAT8B,CAAzC;;AAYA,MAAMC,OAAmC,GAAG,CAACC,KAAK,GAAGV,aAAT,EAAwBW,MAAxB,KAAmC;AAC7E,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKb,iBAAiB,CAACc,mBAAvB;AACE,+BAAYH,KAAZ;AAAmBF,QAAAA,OAAO,EAAE;AAA5B;;AACF,SAAKT,iBAAiB,CAACe,mBAAvB;AACE,+BAAYJ,KAAZ;AAAmBF,QAAAA,OAAO,EAAE,KAA5B;AAAmCD,QAAAA,KAAK,EAAE,KAA1C;AAAiDN,QAAAA,OAAO,EAAEU,MAAM,CAACI,OAAP,CAAeC;AAAzE;;AACF,SAAKjB,iBAAiB,CAACkB,mBAAvB;AACE,+BAAYP,KAAZ;AAAmBF,QAAAA,OAAO,EAAE,KAA5B;AAAmCD,QAAAA,KAAK,EAAE,IAA1C;AAAgDN,QAAAA,OAAO,EAAE;AAAzD;;AACA,SAAKF,iBAAiB,CAACmB,gBAAvB;AACE,+BAAYR,KAAZ;AAAmBF,QAAAA,OAAO,EAAE;AAA5B;;AACF,SAAKT,iBAAiB,CAACoB,gBAAvB;AACE,+BAAYT,KAAZ;AAAmBF,QAAAA,OAAO,EAAE,KAA5B;AAAmCD,QAAAA,KAAK,EAAE,KAA1C;AAAiDD,QAAAA,IAAI,EAAEK,MAAM,CAACI,OAAP,CAAeC;AAAtE;;AACF,SAAKjB,iBAAiB,CAACqB,gBAAvB;AACE,+BAAYV,KAAZ;AAAmBF,QAAAA,OAAO,EAAE,KAA5B;AAAmCD,QAAAA,KAAK,EAAE,IAA1C;AAAgDN,QAAAA,OAAO,EAAE;AAAzD;;AACJ;AACE,aAAOS,KAAP;AAdJ;AAiBD,CAlBD;;AAoBA,eAAeD,OAAf","sourcesContent":["import { Reducer } from 'redux';\nimport { RepositoriesState, RepositoriesTypes } from './types';\n\nconst INITIAL_STATE: RepositoriesState = {\n  filters: {\n    job_type: [],\n    work_schedule: [],\n    experience: [],\n    department: []\n  },\n  jobs: [],\n  error: false,\n  loading: false\n};\n\nconst reducer: Reducer<RepositoriesState> = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case RepositoriesTypes.LOAD_FILTER_REQUEST:\n      return { ...state, loading: true };\n    case RepositoriesTypes.LOAD_FILTER_SUCCESS:\n      return { ...state, loading: false, error: false, filters: action.payload.data };\n    case RepositoriesTypes.LOAD_FILTER_FAILURE:\n      return { ...state, loading: false, error: true, filters: [] };\n      case RepositoriesTypes.LOAD_JOB_REQUEST:\n        return { ...state, loading: true };\n      case RepositoriesTypes.LOAD_JOB_SUCCESS:\n        return { ...state, loading: false, error: false, jobs: action.payload.data };\n      case RepositoriesTypes.LOAD_JOB_FAILURE:\n        return { ...state, loading: false, error: true, filters: [] };\n    default:\n      return state;\n\n  }\n};\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}